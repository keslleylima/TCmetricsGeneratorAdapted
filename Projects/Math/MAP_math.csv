org.apache.commons.math4.analysis.interpolation.BicubicInterpolator.interpolate(double[],double[],double[][]);org.apache.commons.math4.analysis.interpolation.BicubicInterpolatorTest.testPreconditions();org.apache.commons.math4.analysis.interpolation.BicubicInterpolatingFunctionTest.testPlane();org.apache.commons.math4.analysis.interpolation.BicubicInterpolatingFunctionTest.testParaboloid();;;;;;;;;
org.apache.commons.math4.analysis.FunctionUtils.sample(UnivariateFunction,double,double,int);org.apache.commons.math4.analysis.FunctionUtilsTest.testSampleWrongBounds();org.apache.commons.math4.analysis.FunctionUtilsTest.testSampleNegativeNumberOfPoints();org.apache.commons.math4.analysis.FunctionUtilsTest.testSampleNullNumberOfPoints();org.apache.commons.math4.analysis.FunctionUtilsTest.testSample();;;;;;;;
org.apache.commons.math4.analysis.differentiation.JacobianFunction.value(double[]);org.apache.commons.math4.analysis.differentiation.JacobianFunctionTest.testSphere();;;;;;;;;;;
org.apache.commons.math4.analysis.polynomials.PolynomialFunction.subtract(PolynomialFunction);org.apache.commons.math4.analysis.polynomials.PolynomialFunctionTest.testSubtraction();org.apache.commons.math4.analysis.polynomials.PolynomialsUtilsTest.testJacobiLegendre();;;;;;;;;;
org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiator.FiniteDifferencesDifferentiator(int,double,double,double);org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testTooLargeStep();org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testBounds();org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testBoundedSqrt();;;;;;;;;
org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateFunction,double,double,double,double,double,int);org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketCentered();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLow();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketHigh();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLinear();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketExponential();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBadAdditive();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testIterationExceeded();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketSin();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketEndpointRoot();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testNullFunction();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBadMaximumIterations()
org.apache.commons.math4.dfp.DfpMath.pow(Dfp,int);org.apache.commons.math4.analysis.solvers.FieldBracketingNthOrderBrentSolverTest.testNeta();;;;;;;;;;;
org.apache.commons.math4.filter.KalmanFilter.predict(RealVector);org.apache.commons.math4.filter.KalmanFilterTest.testConstantAcceleration();org.apache.commons.math4.filter.KalmanFilterTest.testCannonball();org.apache.commons.math4.filter.KalmanFilterTest.testConstant();;;;;;;;;
org.apache.commons.math4.dfp.Dfp.toDouble();org.apache.commons.math4.analysis.function.SincTest.testDerivativeShortcut();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.divide(int);org.apache.commons.math4.analysis.solvers.FieldBracketingNthOrderBrentSolverTest.testConvergenceOnFunctionAccuracy();;;;;;;;;;;
org.apache.commons.math4.genetics.ListPopulation.getFittestChromosome();org.apache.commons.math4.genetics.GeneticAlgorithmTestBinary.test();org.apache.commons.math4.genetics.GeneticAlgorithmTestPermutations.test();org.apache.commons.math4.genetics.ListPopulationTest.testGetFittestChromosome();;;;;;;;;
org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.MultivariateNormalMixtureExpectationMaximization(double[][]);org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testNonEmptyData();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testNonJaggedData();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testMultipleColumnsRequired();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testMaxIterationsPositive();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testThresholdPositive();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testConvergenceException();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testIncompatibleIntialMixture();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testFit();;;;
org.apache.commons.math4.dfp.Dfp.nextAfter(Dfp);org.apache.commons.math4.dfp.DfpTest.testNextAfter();;;;;;;;;;;
org.apache.commons.math4.genetics.ElitisticListPopulation.nextGeneration();org.apache.commons.math4.genetics.ElitisticListPopulation.nextGeneration();org.apache.commons.math4.genetics.ElitisticListPopulationTest.testNextGeneration();;;;;;;;;;
org.apache.commons.math4.ode.AbstractFieldIntegrator.getEventHandlers();org.apache.commons.math4.ode.nonstiff.AbstractEmbeddedRungeKuttaFieldIntegratorTest.doTestEvents(Field<T>,double,String);;;;;;;;;;;
org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersStandardErrors();org.apache.commons.math4.stat.regression.OLSMultipleLinearRegressionTest.testLongly();org.apache.commons.math4.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility();org.apache.commons.math4.stat.regression.OLSMultipleLinearRegressionTest.testWampler1();;;;;;;;;
org.apache.commons.math4.geometry.euclidean.oned.Cartesian1D.distanceInf(Vector<Euclidean1D>);org.apache.commons.math4.geometry.euclidean.oned.Cartesian1DTest.testDistanceInf();;;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.oned.Cartesian1D.distanceSq(Vector<Euclidean1D>);org.apache.commons.math4.geometry.euclidean.oned.Cartesian1DTest.testDistanceSq();;;;;;;;;;;
org.apache.commons.math4.genetics.Chromosome.getFitness();org.apache.commons.math4.genetics.ChromosomeTest.testFindSameChromosome();;;;;;;;;;;
org.apache.commons.math4.stat.correlation.Covariance.covariance(double[],double[],boolean);org.apache.commons.math4.stat.correlation.CovarianceTest.testConstant();org.apache.commons.math4.stat.correlation.CovarianceTest.testInsufficientData();;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.copySign(Dfp);org.apache.commons.math4.ExtendedFieldElementAbstractTest.testCopySignField();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.copySign(double);org.apache.commons.math4.ExtendedFieldElementAbstractTest.testCopySignDouble();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.intLog10();org.apache.commons.math4.dfp.DfpTest.testLog10();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.intValue();org.apache.commons.math4.dfp.DfpTest.testIntValue();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.isZero();org.apache.commons.math4.dfp.DfpTest.testIsZero();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.linearCombination(Dfp[],Dfp[]);org.apache.commons.math4.ExtendedFieldElementAbstractTest.testLinearCombinationFaFa();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.multiply(int);org.apache.commons.math4.ExtendedFieldElementAbstractTest.testMultiplyInt();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.power10(int);org.apache.commons.math4.dfp.DfpTest.testPower10();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.remainder(Dfp);org.apache.commons.math4.ExtendedFieldElementAbstractTest.testRemainderField();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.signum();org.apache.commons.math4.ExtendedFieldElementAbstractTest.testSignum();;;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.strictlyNegative();org.apache.commons.math4.dfp.DfpTest.testSignPredicates();;;;;;;;;;;
org.apache.commons.math4.dfp.DfpMath.sin(Dfp);org.apache.commons.math4.analysis.function.SincTest.testShortcut();;;;;;;;;;;
org.apache.commons.math4.genetics.ElitisticListPopulation.setElitismRate(double);org.apache.commons.math4.genetics.ElitisticListPopulationTest.testSetElitismRate();org.apache.commons.math4.genetics.ElitisticListPopulationTest.testSetElitismRateTooHigh();org.apache.commons.math4.genetics.ElitisticListPopulationTest.testSetElitismRateTooLow();;;;;;;;;
org.apache.commons.math4.geometry.euclidean.threed.FieldVector3D.orthogonal();org.apache.commons.math4.geometry.euclidean.threed.FieldVector3DTest.testOrthogonal();;;;;;;;;;;
org.apache.commons.math4.genetics.FixedElapsedTime.FixedElapsedTime(long,TimeUnit);org.apache.commons.math4.genetics.FitnessCachingTest.testFitnessCaching();org.apache.commons.math4.genetics.FixedGenerationCountTest.testIsSatisfied();;;;;;;;;;
org.apache.commons.math4.genetics.FixedGenerationCount.FixedGenerationCount(int);org.apache.commons.math4.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(boolean,int);org.apache.commons.math4.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls();;;;;;;;;;
org.apache.commons.math4.ode.JacobianMatrices.setParameterStep(String,double);org.apache.commons.math4.ode.JacobianMatricesTest.testInternalDifferentiation();org.apache.commons.math4.ode.JacobianMatricesTest.testParameterizable();;;;;;;;;;
org.apache.commons.math4.stat.correlation.KendallsCorrelation.computeCorrelationMatrix(RealMatrix);org.apache.commons.math4.stat.correlation.KendallsCorrelationTest.testBlockMatrix();;;;;;;;;;;
org.apache.commons.math4.genetics.ListPopulation.addChromosome(Chromosome);org.apache.commons.math4.genetics.ListPopulationTest.testAddTooManyChromosomesSingleCall();;;;;;;;;;;
org.apache.commons.math4.genetics.ElitisticListPopulation.ElitisticListPopulation(List<Chromosome>,int,double);org.apache.commons.math4.genetics.ListPopulationTest.testChromosomeListConstructorPopulationLimitNotPositive();org.apache.commons.math4.genetics.ListPopulationTest.testConstructorListOfChromosomesBiggerThanPopulationSize();;;;;;;;;;
org.apache.commons.math4.genetics.ListPopulation.setPopulationLimit(int);org.apache.commons.math4.genetics.ListPopulationTest.testSetPopulationLimitTooSmall();;;;;;;;;;;
org.apache.commons.math4.analysis.interpolation.LoessInterpolator.LoessInterpolator(double,int,double);org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest.testOnStraightLine();org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest.testOnDistortedSine();org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest.testIncreasingBandwidthIncreasesSmoothness();org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest.testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers();org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest.testInsufficientBandwidth();org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest.testCompletelyIncorrectBandwidth1();org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest.testCompletelyIncorrectBandwidth2();org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest.testMath296withoutWeights();;;;
org.apache.commons.math4.ml.neuralnet.MapUtils.sort(double[],Iterable<Neuron>,DistanceMeasure);org.apache.commons.math4.ml.neuralnet.MapUtilsTest.testSort();;;;;;;;;;;
org.apache.commons.math4.util.MathUtils.checkFinite(double[]);org.apache.commons.math4.util.MathUtilsTest.testCheckFinite();;;;;;;;;;;
org.apache.commons.math4.util.MathUtils.copySign(int,int);org.apache.commons.math4.util.MathUtilsTest.testIndicatorInt();org.apache.commons.math4.util.MathUtilsTest.testSignInt();;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.twod.NestedLoops.correctOrientation();org.apache.commons.math4.geometry.euclidean.twod.NestedLoopsTest.testNestedLoops();;;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.threed.Plane.intersection(Plane);org.apache.commons.math4.geometry.euclidean.threed.PlaneTest.testIntersection2();;;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.threed.Plane.isSimilarTo(Plane);org.apache.commons.math4.geometry.euclidean.threed.PlaneTest.testSimilar();;;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.threed.Plane.rotate(Cartesian3D,Rotation);org.apache.commons.math4.geometry.euclidean.threed.PlaneTest.testRotate();;;;;;;;;;;
org.apache.commons.math4.stat.regression.RegressionResults.getCovarianceOfParameters(int,int);org.apache.commons.math4.stat.regression.MillerUpdatingRegressionTest.testOneRedundantColumn();org.apache.commons.math4.stat.regression.MillerUpdatingRegressionTest.testThreeRedundantColumn();;;;;;;;;;
org.apache.commons.math4.stat.regression.RegressionResults.getParameterEstimate(int);org.apache.commons.math4.stat.regression.SimpleRegressionTest.testRegressIfaceMethod();;;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.twod.Segment.distance(Cartesian2D);org.apache.commons.math4.geometry.euclidean.twod.SegmentTest.testDistance();;;;;;;;;;;
org.apache.commons.math4.random.SobolSequenceGenerator.SobolSequenceGenerator(int,InputStream);org.apache.commons.math4.random.SobolSequenceGeneratorTest.testConstructor2();;;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.threed.SphericalCoordinates.SphericalCoordinates(double,double,double);org.apache.commons.math4.geometry.euclidean.threed.SphericalCoordinatesTest.testCoordinatesStoC();;;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.threed.SphericalCoordinates.toCartesianHessian(double[][],double[]);org.apache.commons.math4.geometry.euclidean.threed.SphericalCoordinatesTest.testHessian();;;;;;;;;;;
org.apache.commons.math4.geometry.euclidean.threed.SubLine.getSegments();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testEndPoints();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testNoEndPoints();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testNoSegments();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testSeveralSegments();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testHalfInfiniteNeg();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testHalfInfinitePos();;;;;;
org.apache.commons.math4.geometry.euclidean.threed.SubLine.intersection(SubLine,boolean);org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testIntersectionInsideInside();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testIntersectionInsideBoundary();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testIntersectionInsideOutside();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testIntersectionBoundaryBoundary();org.apache.commons.math4.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting();;;;;;;
org.apache.commons.math4.geometry.euclidean.oned.Vector1DFormat.parse(String);org.apache.commons.math4.geometry.euclidean.oned.Vector1DFormatAbstractTest.testParseSimpleNoDecimals();org.apache.commons.math4.geometry.euclidean.oned.Vector1DFormatAbstractTest.testParseSimpleWithDecimals();;;;;;;;;;
org.apache.commons.math4.stat.descriptive.moment.VectorialMean.VectorialMean(int);org.apache.commons.math4.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance();org.apache.commons.math4.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation();;;;;;;;;;
